name: Terraform CI/CD with all Approvals

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform plan -out=tfplan

      - name: Upload plan file
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan

      - name: Upload state file
        uses: actions/upload-artifact@v4
        with:
          name: terraform-state
          path: terraform.tfstate

  terraform-apply:
    name: Terraform Apply (with Pre-check)
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment: production

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download Terraform artifacts
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: .
      - uses: actions/download-artifact@v4
        with:
          name: terraform-state
          path: .

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      - name: Check EC2 Count
        id: ec2-check
        run: |
          echo "Parsing Terraform state to count EC2 instances..."
          COUNT=$(terraform show -json terraform.tfstate | jq '[.values.root_module.resources[] | select(.type=="aws_instance")] | length')
          echo "Found $COUNT EC2 instances"
          echo "ec2_count=$COUNT" >> $GITHUB_OUTPUT

      - name: Conditional Apply
        if: ${{ steps.ec2-check.outputs.ec2_count <= 2 }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -auto-approve tfplan

      - name: Skip Apply if >2 EC2
        if: ${{ steps.ec2-check.outputs.ec2_count > 2 }}
        run: echo "More than 2 EC2 instances exist. Skipping apply. Destroy will be triggered."

  terraform-destroy:
    name: Terraform Destroy (Conditional)
    runs-on: ubuntu-latest
    needs: terraform-apply
    if: ${{ needs.terraform-apply.outputs.ec2_count > 2 }}
    environment: destroy

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download Terraform state
        uses: actions/download-artifact@v4
        with:
          name: terraform-state
          path: .

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      - name: Destroy EC2 Instances
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform destroy -auto-approve
